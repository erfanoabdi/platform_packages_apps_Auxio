// Generated by view binder compiler. Do not edit!
package org.oxycblt.auxio.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.MaterialToolbar;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.oxycblt.auxio.R;
import org.oxycblt.auxio.detail.DetailAppBarLayout;
import org.oxycblt.auxio.ui.recycler.EdgeRecyclerView;

public final class FragmentDetailBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final DetailAppBarLayout detailAppbar;

  @NonNull
  public final EdgeRecyclerView detailRecycler;

  @NonNull
  public final MaterialToolbar detailToolbar;

  private FragmentDetailBinding(@NonNull FrameLayout rootView,
      @NonNull DetailAppBarLayout detailAppbar, @NonNull EdgeRecyclerView detailRecycler,
      @NonNull MaterialToolbar detailToolbar) {
    this.rootView = rootView;
    this.detailAppbar = detailAppbar;
    this.detailRecycler = detailRecycler;
    this.detailToolbar = detailToolbar;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.detail_appbar;
      DetailAppBarLayout detailAppbar = ViewBindings.findChildViewById(rootView, id);
      if (detailAppbar == null) {
        break missingId;
      }

      id = R.id.detail_recycler;
      EdgeRecyclerView detailRecycler = ViewBindings.findChildViewById(rootView, id);
      if (detailRecycler == null) {
        break missingId;
      }

      id = R.id.detail_toolbar;
      MaterialToolbar detailToolbar = ViewBindings.findChildViewById(rootView, id);
      if (detailToolbar == null) {
        break missingId;
      }

      return new FragmentDetailBinding((FrameLayout) rootView, detailAppbar, detailRecycler,
          detailToolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
