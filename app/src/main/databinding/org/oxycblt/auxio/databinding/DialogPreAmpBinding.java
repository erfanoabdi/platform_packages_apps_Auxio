// Generated by view binder compiler. Do not edit!
package org.oxycblt.auxio.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.slider.Slider;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.oxycblt.auxio.R;

public final class DialogPreAmpBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final TextView preAmpNotice;

  @NonNull
  public final TextView withTagsHeader;

  @NonNull
  public final Slider withTagsSlider;

  @NonNull
  public final TextView withTagsTicker;

  @NonNull
  public final TextView withoutTagsHeader;

  @NonNull
  public final Slider withoutTagsSlider;

  @NonNull
  public final TextView withoutTagsTicker;

  private DialogPreAmpBinding(@NonNull NestedScrollView rootView, @NonNull TextView preAmpNotice,
      @NonNull TextView withTagsHeader, @NonNull Slider withTagsSlider,
      @NonNull TextView withTagsTicker, @NonNull TextView withoutTagsHeader,
      @NonNull Slider withoutTagsSlider, @NonNull TextView withoutTagsTicker) {
    this.rootView = rootView;
    this.preAmpNotice = preAmpNotice;
    this.withTagsHeader = withTagsHeader;
    this.withTagsSlider = withTagsSlider;
    this.withTagsTicker = withTagsTicker;
    this.withoutTagsHeader = withoutTagsHeader;
    this.withoutTagsSlider = withoutTagsSlider;
    this.withoutTagsTicker = withoutTagsTicker;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogPreAmpBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogPreAmpBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_pre_amp, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogPreAmpBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.pre_amp_notice;
      TextView preAmpNotice = ViewBindings.findChildViewById(rootView, id);
      if (preAmpNotice == null) {
        break missingId;
      }

      id = R.id.with_tags_header;
      TextView withTagsHeader = ViewBindings.findChildViewById(rootView, id);
      if (withTagsHeader == null) {
        break missingId;
      }

      id = R.id.with_tags_slider;
      Slider withTagsSlider = ViewBindings.findChildViewById(rootView, id);
      if (withTagsSlider == null) {
        break missingId;
      }

      id = R.id.with_tags_ticker;
      TextView withTagsTicker = ViewBindings.findChildViewById(rootView, id);
      if (withTagsTicker == null) {
        break missingId;
      }

      id = R.id.without_tags_header;
      TextView withoutTagsHeader = ViewBindings.findChildViewById(rootView, id);
      if (withoutTagsHeader == null) {
        break missingId;
      }

      id = R.id.without_tags_slider;
      Slider withoutTagsSlider = ViewBindings.findChildViewById(rootView, id);
      if (withoutTagsSlider == null) {
        break missingId;
      }

      id = R.id.without_tags_ticker;
      TextView withoutTagsTicker = ViewBindings.findChildViewById(rootView, id);
      if (withoutTagsTicker == null) {
        break missingId;
      }

      return new DialogPreAmpBinding((NestedScrollView) rootView, preAmpNotice, withTagsHeader,
          withTagsSlider, withTagsTicker, withoutTagsHeader, withoutTagsSlider, withoutTagsTicker);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
