// Generated by view binder compiler. Do not edit!
package org.oxycblt.auxio.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.oxycblt.auxio.R;
import org.oxycblt.auxio.detail.ReadOnlyTextInput;

public final class DialogSongDetailBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final ReadOnlyTextInput detailBitrate;

  @NonNull
  public final LinearLayout detailContainer;

  @NonNull
  public final ReadOnlyTextInput detailDuration;

  @NonNull
  public final ReadOnlyTextInput detailFileName;

  @NonNull
  public final ReadOnlyTextInput detailFormat;

  @NonNull
  public final ReadOnlyTextInput detailRelativeDir;

  @NonNull
  public final ReadOnlyTextInput detailSampleRate;

  @NonNull
  public final ReadOnlyTextInput detailSize;

  private DialogSongDetailBinding(@NonNull FrameLayout rootView,
      @NonNull ReadOnlyTextInput detailBitrate, @NonNull LinearLayout detailContainer,
      @NonNull ReadOnlyTextInput detailDuration, @NonNull ReadOnlyTextInput detailFileName,
      @NonNull ReadOnlyTextInput detailFormat, @NonNull ReadOnlyTextInput detailRelativeDir,
      @NonNull ReadOnlyTextInput detailSampleRate, @NonNull ReadOnlyTextInput detailSize) {
    this.rootView = rootView;
    this.detailBitrate = detailBitrate;
    this.detailContainer = detailContainer;
    this.detailDuration = detailDuration;
    this.detailFileName = detailFileName;
    this.detailFormat = detailFormat;
    this.detailRelativeDir = detailRelativeDir;
    this.detailSampleRate = detailSampleRate;
    this.detailSize = detailSize;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogSongDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogSongDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_song_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogSongDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.detail_bitrate;
      ReadOnlyTextInput detailBitrate = ViewBindings.findChildViewById(rootView, id);
      if (detailBitrate == null) {
        break missingId;
      }

      id = R.id.detail_container;
      LinearLayout detailContainer = ViewBindings.findChildViewById(rootView, id);
      if (detailContainer == null) {
        break missingId;
      }

      id = R.id.detail_duration;
      ReadOnlyTextInput detailDuration = ViewBindings.findChildViewById(rootView, id);
      if (detailDuration == null) {
        break missingId;
      }

      id = R.id.detail_file_name;
      ReadOnlyTextInput detailFileName = ViewBindings.findChildViewById(rootView, id);
      if (detailFileName == null) {
        break missingId;
      }

      id = R.id.detail_format;
      ReadOnlyTextInput detailFormat = ViewBindings.findChildViewById(rootView, id);
      if (detailFormat == null) {
        break missingId;
      }

      id = R.id.detail_relative_dir;
      ReadOnlyTextInput detailRelativeDir = ViewBindings.findChildViewById(rootView, id);
      if (detailRelativeDir == null) {
        break missingId;
      }

      id = R.id.detail_sample_rate;
      ReadOnlyTextInput detailSampleRate = ViewBindings.findChildViewById(rootView, id);
      if (detailSampleRate == null) {
        break missingId;
      }

      id = R.id.detail_size;
      ReadOnlyTextInput detailSize = ViewBindings.findChildViewById(rootView, id);
      if (detailSize == null) {
        break missingId;
      }

      return new DialogSongDetailBinding((FrameLayout) rootView, detailBitrate, detailContainer,
          detailDuration, detailFileName, detailFormat, detailRelativeDir, detailSampleRate,
          detailSize);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
