// Generated by view binder compiler. Do not edit!
package org.oxycblt.auxio.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.progressindicator.LinearProgressIndicator;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.oxycblt.auxio.R;
import org.oxycblt.auxio.image.StyledImageView;
import org.oxycblt.auxio.playback.NoRtlFrameLayout;

public final class FragmentPlaybackBarBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout playbackControlsContainer;

  @NonNull
  public final NoRtlFrameLayout playbackControlsWrapper;

  @NonNull
  public final StyledImageView playbackCover;

  @NonNull
  public final TextView playbackInfo;

  @NonNull
  public final Button playbackPlayPause;

  @NonNull
  public final LinearProgressIndicator playbackProgressBar;

  @NonNull
  public final NoRtlFrameLayout playbackProgressContainer;

  @NonNull
  public final Button playbackSkipNext;

  @NonNull
  public final TextView playbackSong;

  private FragmentPlaybackBarBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout playbackControlsContainer,
      @NonNull NoRtlFrameLayout playbackControlsWrapper, @NonNull StyledImageView playbackCover,
      @NonNull TextView playbackInfo, @NonNull Button playbackPlayPause,
      @NonNull LinearProgressIndicator playbackProgressBar,
      @NonNull NoRtlFrameLayout playbackProgressContainer, @NonNull Button playbackSkipNext,
      @NonNull TextView playbackSong) {
    this.rootView = rootView;
    this.playbackControlsContainer = playbackControlsContainer;
    this.playbackControlsWrapper = playbackControlsWrapper;
    this.playbackCover = playbackCover;
    this.playbackInfo = playbackInfo;
    this.playbackPlayPause = playbackPlayPause;
    this.playbackProgressBar = playbackProgressBar;
    this.playbackProgressContainer = playbackProgressContainer;
    this.playbackSkipNext = playbackSkipNext;
    this.playbackSong = playbackSong;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPlaybackBarBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPlaybackBarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_playback_bar, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPlaybackBarBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.playback_controls_container;
      LinearLayout playbackControlsContainer = ViewBindings.findChildViewById(rootView, id);
      if (playbackControlsContainer == null) {
        break missingId;
      }

      id = R.id.playback_controls_wrapper;
      NoRtlFrameLayout playbackControlsWrapper = ViewBindings.findChildViewById(rootView, id);
      if (playbackControlsWrapper == null) {
        break missingId;
      }

      id = R.id.playback_cover;
      StyledImageView playbackCover = ViewBindings.findChildViewById(rootView, id);
      if (playbackCover == null) {
        break missingId;
      }

      id = R.id.playback_info;
      TextView playbackInfo = ViewBindings.findChildViewById(rootView, id);
      if (playbackInfo == null) {
        break missingId;
      }

      id = R.id.playback_play_pause;
      Button playbackPlayPause = ViewBindings.findChildViewById(rootView, id);
      if (playbackPlayPause == null) {
        break missingId;
      }

      id = R.id.playback_progress_bar;
      LinearProgressIndicator playbackProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (playbackProgressBar == null) {
        break missingId;
      }

      id = R.id.playback_progress_container;
      NoRtlFrameLayout playbackProgressContainer = ViewBindings.findChildViewById(rootView, id);
      if (playbackProgressContainer == null) {
        break missingId;
      }

      id = R.id.playback_skip_next;
      Button playbackSkipNext = ViewBindings.findChildViewById(rootView, id);
      if (playbackSkipNext == null) {
        break missingId;
      }

      id = R.id.playback_song;
      TextView playbackSong = ViewBindings.findChildViewById(rootView, id);
      if (playbackSong == null) {
        break missingId;
      }

      return new FragmentPlaybackBarBinding((ConstraintLayout) rootView, playbackControlsContainer,
          playbackControlsWrapper, playbackCover, playbackInfo, playbackPlayPause,
          playbackProgressBar, playbackProgressContainer, playbackSkipNext, playbackSong);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
